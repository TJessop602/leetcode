void printMatrix(int** mat, int rows, int cols){
    for(int i = 0; i < rows; i++){
        for(int j = 0; j < cols; j++){
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }
}

int minimumDeleteSum(char * s1, char * s2){
    int rows = strlen(s1)+1;
    int cols = strlen(s2)+1;
    int** dp = calloc(rows, sizeof(int*));
    for(int i = 0; i < rows; i++){
        dp[i] = calloc(cols, sizeof(int));
    }

    for(int i = 0; i < rows; i++){
        for(int j = 0; j < cols; j++){
            if(i == 0 && j == 0){
                continue;
            }else if(i == 0 && j != 0){
                dp[i][j] = dp[i][j-1] + s2[j-1];
            }else if(i != 0 && j == 0){
                dp[i][j] = dp[i-1][j] + s1[i-1];
            }else if(s1[i-1] == s2[j-1]){
                dp[i][j] = dp[i-1][j-1];
            }else{
                int a = s1[i-1]+dp[i-1][j];
                int b = s2[j-1]+dp[i][j-1];
                dp[i][j] = a < b ? a : b;
            }
        }
    }
    int ret = dp[rows-1][cols-1];
    for(int i = 0; i < rows; i++){
        free(dp[i]);
    }
    free(dp);
    return ret;
}
